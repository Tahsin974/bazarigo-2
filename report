{
  active === "Reports" && (
    <motion.div
      initial={{ opacity: 0, y: 8 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.3 }}
    >
      <div className="flex flex-col md:flex-row justify-between mb-4 gap-3">
        <select
          value={reportFilter}
          onChange={(e) => setReportFilter(e.target.value)}
          className="border rounded px-3 py-2"
        >
          <option value="all">All Orders</option>
          <option value="completed">Completed</option>
          <option value="pending">Pending</option>
          <option value="failed">Failed</option>
        </select>
        <div className="flex gap-2">
          <input
            type="date"
            value={startDate}
            onChange={(e) => setStartDate(e.target.value)}
            className="border rounded px-3 py-2"
          />
          <input
            type="date"
            value={endDate}
            onChange={(e) => setEndDate(e.target.value)}
            className="border rounded px-3 py-2"
          />
        </div>
        <div className="flex gap-2">
          <button
            onClick={exportReportsExcel}
            className="flex items-center gap-1 bg-[#FF0055] text-white px-3 py-2 rounded"
          >
            <Download size={16} /> Export
          </button>
        </div>
      </div>

      <section className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <div className="bg-white p-6 rounded-lg shadow-md">
          <h3 className="font-semibold mb-4">Orders by Status</h3>
          <ResponsiveContainer width="100%" height={250}>
            <BarChart data={ordersByStatus(filteredOrdersForReport)}>
              <CartesianGrid strokeDasharray="3 3" />
              <XAxis dataKey="status" />
              <YAxis />
              <Tooltip />
              <Bar dataKey="count" fill="#FF0055" />
            </BarChart>
          </ResponsiveContainer>
        </div>

        <div className="bg-white p-6 rounded-lg shadow-md">
          <h3 className="font-semibold mb-4">Revenue Breakdown</h3>
          <ResponsiveContainer width="100%" height={250}>
            <PieChart>
              <Pie
                data={revenueBreakdown(filteredOrdersForReport)}
                dataKey="value"
                nameKey="label"
                cx="50%"
                cy="50%"
                outerRadius={80}
              >
                {revenueBreakdown(filteredOrdersForReport).map(
                  (entry, index) => (
                    <Cell key={`cell-${index}`} fill={entry.color} />
                  )
                )}
              </Pie>
              <Tooltip />
            </PieChart>
          </ResponsiveContainer>
        </div>
      </section>
    </motion.div>
  );
}

function bulkMarkShipped() {
  if (!selectedOrderIds.length) return alert("No orders selected");
  setOrders((prev) =>
    prev.map((o) =>
      selectedOrderIds.includes(o.id) ? { ...o, status: "Shipped" } : o
    )
  );
  setSelectedOrderIds([]);
}

<section className="grid grid-cols-1 lg:grid-cols-2 gap-6">
  <div className="bg-white p-6 rounded-lg shadow-md">
    <h3 className="font-semibold mb-4">Orders by Status</h3>
    <ResponsiveContainer width="100%" height={250}>
      <BarChart data={ordersByStatus(filteredOrdersForReport)}>
        <CartesianGrid strokeDasharray="3 3" />
        <XAxis dataKey="status" />
        <YAxis />
        <Tooltip />
        <Bar dataKey="count" fill="#FF0055" />
      </BarChart>
    </ResponsiveContainer>
  </div>

  <div className="bg-white p-6 rounded-lg shadow-md">
    <h3 className="font-semibold mb-4">Revenue Breakdown</h3>
    <ResponsiveContainer width="100%" height={250}>
      <PieChart>
        <Pie
          data={revenueBreakdown(filteredOrdersForReport)}
          dataKey="value"
          nameKey="label"
          cx="50%"
          cy="50%"
          outerRadius={80}
        >
          {revenueBreakdown(filteredOrdersForReport).map((entry, index) => (
            <Cell key={`cell-${index}`} fill={entry.color} />
          ))}
        </Pie>
        <Tooltip />
      </PieChart>
    </ResponsiveContainer>
  </div>
</section>;

<div className="flex gap-2">
  <input
    type="date"
    value={startDate}
    onChange={(e) => setStartDate(e.target.value)}
    className="border rounded px-3 py-2"
  />
  <input
    type="date"
    value={endDate}
    onChange={(e) => setEndDate(e.target.value)}
    className="border rounded px-3 py-2"
  />
</div>;
